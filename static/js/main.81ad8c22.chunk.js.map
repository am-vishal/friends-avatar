{"version":3,"sources":["Card.js","CardList.js","friends.js","SearchBox.js","Scroll.js","App.js","serviceWorker.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","friends","cardArray","map","user","i","key","username","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","App","onSearchChange","event","setState","target","value","state","filteredfriends","this","filter","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gPAmBeA,EAfF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAGtB,OACI,yBAAKC,UAAU,sDACX,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BL,EAA1B,eACtB,gCACI,4BAAKC,EAAL,KACA,uBAAGE,UAAU,IAAID,MC2BlBI,EAnCE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACVC,EAAYD,EAAQE,KAAI,SAACC,EAAMC,GACjC,OAAQ,kBAAC,EAAD,CAAMC,IAAKD,EACfX,GAAIO,EAAQI,GAAGX,GACfC,KAAMM,EAAQI,GAAGV,KACjBC,MAAOK,EAAQI,GAAGT,WAG1B,OACI,6BACKM,ICdAD,EAAU,CACnB,CACIP,GAAI,EACJC,KAAM,SACNY,SAAU,WACVX,MAAO,sBAEX,CACIF,GAAI,EACJC,KAAM,eACNY,SAAU,YACVX,MAAO,qBAEX,CACIF,GAAI,EACJC,KAAM,SACNY,SAAU,WACVX,MAAO,wBAEX,CACIF,GAAI,EACJC,KAAM,mBACNY,SAAU,WACVX,MAAO,6BAEX,CACIF,GAAI,EACJC,KAAM,eACNY,SAAU,cACVX,MAAO,0BAEX,CACIF,GAAI,EACJC,KAAM,uBACNY,SAAU,mBACVX,MAAO,2BAEX,CACIF,GAAI,EACJC,KAAM,kBACNY,SAAU,eACVX,MAAO,0BAEX,CACIF,GAAI,EACJC,KAAM,eACNY,SAAU,WACVX,MAAO,oBAEX,CACIF,GAAI,EACJC,KAAM,kBACNY,SAAU,WACVX,MAAO,2BAEX,CACIF,GAAI,GACJC,KAAM,qBACNY,SAAU,iBACVX,MAAO,0BAEX,CACIF,GAAI,GACJC,KAAM,aACNY,SAAU,eACVX,MAAO,0BACR,CACCF,GAAI,GACJC,KAAM,aACNY,SAAU,QACVX,MAAO,kBAEX,CACIF,GAAI,GACJC,KAAM,eACNY,SAAU,QACVX,MAAO,kBAEX,CACIF,GAAI,GACJC,KAAM,QACNY,SAAU,OACVX,MAAO,gBAKX,CACIF,GAAI,GACJC,KAAM,mBACNY,SAAU,MACVX,MAAO,8BChFAY,EATG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,yBAAKb,UAAU,OACX,2BAAOA,UAAU,mCACbc,KAAK,SAASC,YAAY,SAC1BC,SAAUH,MCKXI,G,MAVA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAERC,UAAW,OAAQC,OAAQ,SAE1BH,EAAMI,YC4BJC,E,kDA1BX,aAAe,IAAD,8BACV,gBAMJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAN1C,EAAKC,MAAQ,CACTzB,QAASA,EACTQ,YAAa,IAJP,E,qDAUJ,IAAD,OACCkB,EAAkBC,KAAKF,MAAMzB,QAAQ4B,QAAO,SAAA5B,GAC9C,OAAOA,EAAQN,KAAKmC,cAAcC,SAAS,EAAKL,MAAMjB,YAAYqB,kBAEtE,OACI,yBAAKjC,UAAU,MACX,8CACA,kBAAC,EAAD,CAAWa,aAAckB,KAAKP,iBAE9B,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUpB,QAAS0B,U,GArBrBK,aCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCRNC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,SDuHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.81ad8c22.chunk.js","sourcesContent":["import React from 'react';\r\n// import CardList from './CardList';\r\n\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    // const Card = (props) => { you can write this as well\r\n    // const { name, email, id } = props; or this\r\n    return (\r\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"friends\" src={`https://robohash.org/${id}?set=set5`} />\r\n            <header>\r\n                <h2>{name} </h2>\r\n                <p className=''>{email}</p>\r\n            </header>\r\n\r\n\r\n        </div >\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n//Example:1\r\nconst CardList = ({ friends }) => {\r\n    const cardArray = friends.map((user, i) => {\r\n        return (<Card key={i}\r\n            id={friends[i].id}\r\n            name={friends[i].name}\r\n            email={friends[i].email}\r\n        />)\r\n    })\r\n    return (\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\n// or you could write like this\r\n// const CardList = ({ friends }) => {\r\n//     return (\r\n//         <div>\r\n//             {\r\n//                 friends.map((user, i) => {\r\n//                     return (\r\n\r\n//                         <Card\r\n//                             key={i}\r\n//                             id={friends[i].id}\r\n//                             name={friends[i].name}\r\n//                             email={friends[i].email}\r\n//                         />\r\n//                     );\r\n//                 })\r\n//             }\r\n//         </div>\r\n//     );\r\n// }\r\nexport default CardList;","export const friends = [\r\n    {\r\n        id: 1,\r\n        name: 'Martin',\r\n        username: 'martin99',\r\n        email: 'martin.l@gmail.com'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Ervin Howell',\r\n        username: 'Antonette',\r\n        email: 'Shanna@melissa.tv'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Denvor',\r\n        username: 'Samantha',\r\n        email: 'D.nathan@yesenia.net'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Patricia Lebsack',\r\n        username: 'Karianne',\r\n        email: 'Julianne.OConner@kory.org'\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Ashish Kumar',\r\n        username: 'kumarashish',\r\n        email: 'kumarashis87@gmail.com'\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Mrs. Dennis Schulist',\r\n        username: 'Leopoldo_Corkery',\r\n        email: 'Karley_Dach@jasper.info'\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Kurtis Weissnat',\r\n        username: 'Elwyn.Skiles',\r\n        email: 'Telly.Hoeger@billy.biz'\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Vishal Kumar',\r\n        username: 'amvishal',\r\n        email: 'vkcky6@gmail.com'\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Glenna Reichert',\r\n        username: 'Delphine',\r\n        email: 'Chaim_McDermott@dana.io'\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Clementina DuBuque',\r\n        username: 'Moriah.Stanton',\r\n        email: 'Rey.Padberg@karina.biz'\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'Ajay Nayak',\r\n        username: 'iamajaynayak',\r\n        email: 'iamajaynayak@yahoo.com'\r\n    }, {\r\n        id: 12,\r\n        name: 'logan paul',\r\n        username: 'logan',\r\n        email: 'logan@paul.com'\r\n    },\r\n    {\r\n        id: 13,\r\n        name: 'Manju Mishra',\r\n        username: 'manis',\r\n        email: 'maniss@mhub.tv'\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'Saira',\r\n        username: 'sara',\r\n        email: 'saira@it.com',\r\n\r\n\r\n\r\n    },\r\n    {\r\n        id: 15,\r\n        name: 'Anand Chaurasiya',\r\n        username: 'ksh',\r\n        email: 'kumarashish8522@gmail.com'\r\n    }\r\n\r\n\r\n];\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n                type=\"search\" placeholder=\"search\"\r\n                onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{\r\n\r\n            overflowY: 'auto', height: '75vh'\r\n        }}>\r\n            {props.children}\r\n        </div >\r\n    );\r\n};\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from './CardList'\r\nimport { friends } from './friends';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\nimport Scroll from './Scroll';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            friends: friends,\r\n            searchfield: ''\r\n        }\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n    render() {\r\n        const filteredfriends = this.state.friends.filter(friends => {\r\n            return friends.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        return (\r\n            <div className='tc' >\r\n                <h1>Friends Avatar</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n\r\n                <Scroll>\r\n                    <CardList friends={filteredfriends} />\r\n                </Scroll>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport Card from './Card';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport CardList from './CardList';\nimport { friends } from './friends';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n//<App>\n//\n//</App > "],"sourceRoot":""}